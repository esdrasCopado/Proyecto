// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "./ERD.svg"
  theme    = "forest"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ARTISTA
  ORGANIZADOR
  ADMIN
}

enum TipoBoleto {
  VIP
  GENERAL
  PLATINO
  ORO
}

enum EstadoOrden {
  PENDIENTE
  PAGADO
  CANCELADO
  REEMBOLSADO
}

enum RolArtista {
  HEADLINER
  TELONERO
  INVITADO
  COLABORADOR
}

model Usuario {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  password      String
  nombre        String
  apellidos     String
  telefono      String
  fechaRegistro DateTime @default(now()) @map("fecha_registro")
  rol           Role     @default(USER)

  boletos Boleto[]
  ordenes Orden[]

  artista     Artista?
  organizador Organizador?

  @@map("usuarios")
}

model Artista {
  id         Int             @id @default(autoincrement())
  nombre     String
  genero     String
  contacto   String
  paisOrigen String
  fechaDebut DateTime
  disquera   String?
  usuarioId  Int?            @unique @map("usuario_id")
  usuario    Usuario?        @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  eventos    ArtistaEvento[]

  @@map("artistas")
}

model Organizador {
  id        Int      @id @default(autoincrement())
  nombre    String
  contacto  String
  pais      String
  fundacion DateTime
  usuarioId Int?     @unique @map("usuario_id")
  usuario   Usuario? @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  eventos   Evento[]

  @@map("organizadores")
}

model Evento {
  id          Int      @id @default(autoincrement())
  nombre      String
  descripcion String?  @db.Text
  fecha       DateTime
  ubicacion   String
  imagenUrl   String?  @map("imagen_url")

  //relaciones
  boletos       Boleto[]
  artistas      ArtistaEvento[]
  organizadorId Int             @map("organizador_id")
  organizador   Organizador     @relation(fields: [organizadorId], references: [id], onDelete: Cascade)

  @@index([fecha])
  @@index([organizadorId])
  @@map("eventos")
}

model Boleto {
  id         Int        @id @default(autoincrement())
  precio     Decimal    @db.Decimal(10, 2)
  tipo       TipoBoleto @default(GENERAL)
  disponible Boolean

  // claves foraneas
  eventoId  Int  @map("evento_id")
  usuarioId Int? @map("usuario_id")
  ordenId   Int? @map("orden_id")

  // relaciones
  evento  Evento   @relation(fields: [eventoId], references: [id], onDelete: Cascade)
  usuario Usuario? @relation(fields: [usuarioId], references: [id], onDelete: SetNull)
  orden   Orden?   @relation(fields: [ordenId], references: [id], onDelete: SetNull)

  @@index([eventoId])
  @@index([usuarioId])
  @@index([ordenId])
  @@map("boletos")
}

model ArtistaEvento {
  id                Int         @id @default(autoincrement())
  artistaId         Int         @map("artista_id")
  eventoId          Int         @map("evento_id")
  rol               RolArtista? @default(INVITADO)
  compensacion      Decimal?    @db.Decimal(10, 2)
  fechaConfirmacion DateTime?   @map("fecha_confirmacion")

  //relaciones
  artista Artista @relation(fields: [artistaId], references: [id], onDelete: Cascade)
  evento  Evento  @relation(fields: [eventoId], references: [id], onDelete: Cascade)

  @@unique([artistaId, eventoId])
  @@map("artista_evento")
}

model Orden {
  id     Int         @id @default(autoincrement())
  total  Decimal     @db.Decimal(10, 2)
  fecha  DateTime    @default(now())
  estado EstadoOrden @default(PENDIENTE)

  // Clave for√°nea
  usuarioId Int @map("usuario_id")

  // Relaciones
  usuario Usuario  @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  boletos Boleto[]

  @@index([usuarioId])
  @@index([fecha])
  @@map("ordenes")
}
